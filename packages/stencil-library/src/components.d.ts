/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface CounterComponent {
        "btn_decrease": string;
        /**
          * The properties
         */
        "btn_increase": string;
        "btn_reset": string;
        "text_color": string;
    }
    interface TextComponent {
        /**
          * The text
         */
        "text": string;
    }
}
export interface CounterComponentCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLCounterComponentElement;
}
declare global {
    interface HTMLCounterComponentElement extends Components.CounterComponent, HTMLStencilElement {
    }
    var HTMLCounterComponentElement: {
        prototype: HTMLCounterComponentElement;
        new (): HTMLCounterComponentElement;
    };
    interface HTMLTextComponentElement extends Components.TextComponent, HTMLStencilElement {
    }
    var HTMLTextComponentElement: {
        prototype: HTMLTextComponentElement;
        new (): HTMLTextComponentElement;
    };
    interface HTMLElementTagNameMap {
        "counter-component": HTMLCounterComponentElement;
        "text-component": HTMLTextComponentElement;
    }
}
declare namespace LocalJSX {
    interface CounterComponent {
        "btn_decrease"?: string;
        /**
          * The properties
         */
        "btn_increase"?: string;
        "btn_reset"?: string;
        "onDidReset"?: (event: CounterComponentCustomEvent<any>) => void;
        "text_color"?: string;
    }
    interface TextComponent {
        /**
          * The text
         */
        "text"?: string;
    }
    interface IntrinsicElements {
        "counter-component": CounterComponent;
        "text-component": TextComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "counter-component": LocalJSX.CounterComponent & JSXBase.HTMLAttributes<HTMLCounterComponentElement>;
            "text-component": LocalJSX.TextComponent & JSXBase.HTMLAttributes<HTMLTextComponentElement>;
        }
    }
}
